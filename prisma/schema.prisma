generator client {
  provider        = "prisma-client-js"
  output          = "../lib/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["puyuh"]
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("puyuh")
  Cart Cart[]
  Transaction Transaction[]
  Address Address[]
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  gambar       String
  deskripsi    String
  harga        Float
  stock        Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  orders       Order[]
  transactions Transaction[]

  @@schema("puyuh")
  Cart Cart[]
}

model Order {
  id              Int      @id @default(autoincrement())
  customerName    String
  customerAddress String
  orderDate       DateTime
  orderType       String
  orderAmount     Int
  totalPrice      Float
  status          Status @default(PENDING)
  productId       Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  product         Product  @relation(fields: [productId], references: [id])

  @@schema("puyuh")
}

model Employee {
  id         Int      @id @default(autoincrement())
  employeeId String   @unique
  name       String
  email      String   @unique
  address    String
  salary     Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("puyuh")
}

model Cart {
  id         Int      @id @default(autoincrement())
  userId     Int
  productId  Int
  quantity   Int      @default(1)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@schema("puyuh")
}


model Address {
  id         Int      @id @default(autoincrement())
  street     String
  city       String
  province   String
  postalCode String
  userId     Int
  createdAt  DateTime @default(now())

  // Relation
  user       User     @relation(fields: [userId], references: [id])

  @@schema("puyuh")
}


model Transaction {
  id         Int      @id @default(autoincrement())
  transactionId String @unique
  userId     Int
  productId  Int
  amount     Int
  totalPrice Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])

  @@schema("puyuh")
}

enum Role {
  ADMIN
  USER

  @@schema("puyuh")
}

enum Status {
  PENDING
  PROCESSING
  COMPLETED
  ONHOLD
  REJECTED
  INTRANSIT

  @@schema("puyuh")
}