generator client {
  provider        = "prisma-client-js"
  output          = "../lib/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["puyuh"]
}

model User {
  user_id   Int      @id @default(autoincrement())
  nama      String
  email     String   @unique
  password  String

  Admin     Admin?
  Customer  Customer?

  @@schema(map: "puyuh")
}

model Admin {
  admin_id Int    @id
  User     User   @relation(fields: [admin_id], references: [user_id])
  Pengeluaran Pengeluaran[]

  @@schema(map: "puyuh")
}

model Customer {
  customer_id Int     @id
  alamat      String
  User        User    @relation(fields: [customer_id], references: [user_id])
  Pesanan     Pesanan[]

  @@schema(map: "puyuh")
}

model Kategori {
  kategori_id Int       @id @default(autoincrement())
  nama        String    @unique
  deskripsi   String
  Produk      Produk[]

  @@schema(map: "puyuh")
}

model Produk {
  produk_id Int          @id @default(autoincrement())
  nama      String
  deskripsi String
  harga     Float
  stok      Int
  kategori  Kategori?    @relation(fields: [kategori_id], references: [kategori_id])
  kategori_id Int

  ItemPesanan ItemPesanan[]

  @@schema(map: "puyuh")
}

model Pesanan {
  pesanan_id      Int            @id @default(autoincrement())
  customer_id     Int
  tanggal_pesanan DateTime
  total_harga     Float
  order_method    OrderMethod
  status          OrderStatus
  biaya_pengiriman  Float?


  Customer        Customer       @relation(fields: [customer_id], references: [customer_id])
  ItemPesanan     ItemPesanan[]
  Pendapatan      Pendapatan?
  Pengiriman      Pengiriman?

  @@schema(map: "puyuh")
}

enum OrderMethod {
  PICKUP
  DELIVERY

  @@schema(map: "puyuh")
}

enum OrderStatus {
  PENDING_PAYMENT
  CURRENTLY_SHIPPING
  COMPLETED
  CANCELED

  @@schema(map: "puyuh")
}

model ItemPesanan {
  item_pesanan_id Int     @id @default(autoincrement())
  pesanan_id      Int
  produk_id       Int
  jumlah          Int
  subtotal        Float

  Pesanan         Pesanan @relation(fields: [pesanan_id], references: [pesanan_id])
  Produk          Produk  @relation(fields: [produk_id], references: [produk_id])

  @@schema(map: "puyuh")
}

model Pengiriman {
  pengiriman_id Int      @id @default(autoincrement())
  pesanan_id    Int      @unique
  karyawan_id   Int
  nama_barang   String
  berat_barang  Float

  Pesanan       Pesanan  @relation(fields: [pesanan_id], references: [pesanan_id])
  Karyawan      Karyawan @relation(fields: [karyawan_id], references: [karyawan_id])

  @@schema(map: "puyuh")
}

model Pendapatan {
  pendapatan_id Int      @id @default(autoincrement())
  pesanan_id    Int      @unique
  jumlah        Float
  tanggal       DateTime

  Pesanan       Pesanan  @relation(fields: [pesanan_id], references: [pesanan_id])

  @@schema(map: "puyuh")
}

model Pengeluaran {
  pengeluaran_id Int                  @id @default(autoincrement())
  admin_id       Int
  kategori       KategoriPengeluaran
  deskripsi      String
  jumlah         Float
  tanggal        DateTime

  Admin          Admin               @relation(fields: [admin_id], references: [admin_id])

  @@schema(map: "puyuh")
}

enum KategoriPengeluaran {
  PAKAN
  GAJI_KARYAWAN

  @@schema(map: "puyuh")
}

model Karyawan {
  karyawan_id Int      @id @default(autoincrement())
  nama        String
  jabatan     String
  gaji        Float
  Pengiriman  Pengiriman[]

  @@schema(map: "puyuh")
}



