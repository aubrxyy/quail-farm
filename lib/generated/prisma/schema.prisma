generator client {
  provider        = "prisma-client-js"
  output          = "../lib/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["puyuh"]
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Address   Address[]
  Cart      Cart[]
  Order     Order[]

  @@schema("puyuh")
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  gambar    String
  deskripsi String
  harga     Float
  stock     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
  orders    Order[]

  @@schema("puyuh")
}

model Order {
  id     Int  @id @default(autoincrement())
  // User relation
  userId Int // Foreign key to User table
  user   User @relation(fields: [userId], references: [id])

  // Product relation
  productId Int // Foreign key to Product table  
  product   Product @relation(fields: [productId], references: [id])

  // Order-specific fields
  customerName    String // Can be derived from user but stored for historical record
  customerAddress String // Can be derived from user but stored for historical record
  orderDate       DateTime
  orderType       String
  orderAmount     Int
  totalPrice      Float
  status          Status   @default(PENDING)

  // Timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@schema("puyuh")
}

model Employee {
  id         Int      @id @default(autoincrement())
  employeeId String   @unique
  name       String
  email      String   @unique
  address    String
  salary     Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@schema("puyuh")
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@schema("puyuh")
}

model Address {
  id         Int      @id @default(autoincrement())
  street     String
  city       String
  province   String
  postalCode String
  userId     Int
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])

  @@schema("puyuh")
}

enum Role {
  ADMIN
  USER

  @@schema("puyuh")
}

enum Status {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED

  @@schema("puyuh")
}
